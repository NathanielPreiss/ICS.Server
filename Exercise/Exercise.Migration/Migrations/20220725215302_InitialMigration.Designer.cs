// <auto-generated />
using ICS.Exercise;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICS.Exercise.Migrations
{
    [DbContext(typeof(ExerciseDbContext))]
    [Migration("20220725215302_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ICS.Exercise.Classification", b =>
                {
                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("MechanicId")
                        .HasColumnType("int");

                    b.Property<int>("UtilityId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseId");

                    b.ToTable("Classification", "exercise");

                    b.HasData(
                        new
                        {
                            ExerciseId = 111001,
                            MechanicId = 2,
                            UtilityId = 3
                        },
                        new
                        {
                            ExerciseId = 112001,
                            MechanicId = 2,
                            UtilityId = 3
                        },
                        new
                        {
                            ExerciseId = 113001,
                            MechanicId = 2,
                            UtilityId = 2
                        },
                        new
                        {
                            ExerciseId = 114001,
                            MechanicId = 1,
                            UtilityId = 1
                        },
                        new
                        {
                            ExerciseId = 115001,
                            MechanicId = 1,
                            UtilityId = 3
                        },
                        new
                        {
                            ExerciseId = 116001,
                            MechanicId = 2,
                            UtilityId = 2
                        },
                        new
                        {
                            ExerciseId = 131000,
                            MechanicId = 1,
                            UtilityId = 1
                        });
                });

            modelBuilder.Entity("ICS.Exercise.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercise", "exercise");

                    b.HasData(
                        new
                        {
                            ExerciseId = 111001,
                            ExerciseName = "Neck Flexion"
                        },
                        new
                        {
                            ExerciseId = 112001,
                            ExerciseName = "Neck Extension"
                        },
                        new
                        {
                            ExerciseId = 113001,
                            ExerciseName = "Front Raise"
                        },
                        new
                        {
                            ExerciseId = 114001,
                            ExerciseName = "Upright Row"
                        },
                        new
                        {
                            ExerciseId = 115001,
                            ExerciseName = "Rear Row"
                        },
                        new
                        {
                            ExerciseId = 116001,
                            ExerciseName = "Front Lateral Raise"
                        },
                        new
                        {
                            ExerciseId = 131000,
                            ExerciseName = "Chest Press"
                        });
                });

            modelBuilder.Entity("ICS.Exercise.Mechanic", b =>
                {
                    b.Property<int>("MechanicId")
                        .HasColumnType("int");

                    b.Property<string>("MechanicName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("MechanicId");

                    b.ToTable("Mechanic", "exercise");

                    b.HasData(
                        new
                        {
                            MechanicId = 1,
                            MechanicName = "Compound"
                        },
                        new
                        {
                            MechanicId = 2,
                            MechanicName = "Isolated"
                        });
                });

            modelBuilder.Entity("ICS.Exercise.Utility", b =>
                {
                    b.Property<int>("UtilityId")
                        .HasColumnType("int");

                    b.Property<string>("UtilityName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UtilityId");

                    b.ToTable("Utility", "exercise");

                    b.HasData(
                        new
                        {
                            UtilityId = 1,
                            UtilityName = "Basic"
                        },
                        new
                        {
                            UtilityId = 2,
                            UtilityName = "Auxiliary"
                        },
                        new
                        {
                            UtilityId = 3,
                            UtilityName = "Basic or Auxiliary"
                        });
                });

            modelBuilder.Entity("ICS.Muscle.Muscle", b =>
                {
                    b.Property<int>("MuscleId")
                        .HasColumnType("int");

                    b.Property<string>("MuscleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("MuscleId");

                    b.ToTable("Muscle", "exercise");

                    b.HasData(
                        new
                        {
                            MuscleId = 111000,
                            MuscleName = "Sternocleidomastoid"
                        },
                        new
                        {
                            MuscleId = 112000,
                            MuscleName = "Splenius"
                        },
                        new
                        {
                            MuscleId = 121000,
                            MuscleName = "Anterior Deltoid"
                        },
                        new
                        {
                            MuscleId = 122000,
                            MuscleName = "Lateral Deltoid"
                        },
                        new
                        {
                            MuscleId = 123000,
                            MuscleName = "Posterior Deltoid"
                        },
                        new
                        {
                            MuscleId = 124000,
                            MuscleName = "Supraspinatus"
                        },
                        new
                        {
                            MuscleId = 131000,
                            MuscleName = "Pectoralis Major"
                        },
                        new
                        {
                            MuscleId = 132000,
                            MuscleName = "Pectoralis Minor"
                        },
                        new
                        {
                            MuscleId = 133000,
                            MuscleName = "Serratus Anterior"
                        },
                        new
                        {
                            MuscleId = 141000,
                            MuscleName = "Latissimus Dorsi"
                        },
                        new
                        {
                            MuscleId = 142000,
                            MuscleName = "Teres"
                        },
                        new
                        {
                            MuscleId = 143000,
                            MuscleName = "Trapezius"
                        },
                        new
                        {
                            MuscleId = 145000,
                            MuscleName = "Levator Scapulae"
                        },
                        new
                        {
                            MuscleId = 146000,
                            MuscleName = "Rhomboids"
                        },
                        new
                        {
                            MuscleId = 147000,
                            MuscleName = "Infraspinatus"
                        },
                        new
                        {
                            MuscleId = 148000,
                            MuscleName = "Subscapularis"
                        },
                        new
                        {
                            MuscleId = 151000,
                            MuscleName = "Triceps Brachii"
                        },
                        new
                        {
                            MuscleId = 152000,
                            MuscleName = "Biceps Brachii"
                        },
                        new
                        {
                            MuscleId = 153000,
                            MuscleName = "Brachialis"
                        },
                        new
                        {
                            MuscleId = 161000,
                            MuscleName = "Brachioradialis"
                        },
                        new
                        {
                            MuscleId = 162000,
                            MuscleName = "Wrist Flexors"
                        },
                        new
                        {
                            MuscleId = 163000,
                            MuscleName = "Wrist Extendors"
                        },
                        new
                        {
                            MuscleId = 164000,
                            MuscleName = "Wrist Pronator"
                        },
                        new
                        {
                            MuscleId = 165000,
                            MuscleName = "Wrist Supinator"
                        },
                        new
                        {
                            MuscleId = 211000,
                            MuscleName = "Quadratus Lumborum"
                        },
                        new
                        {
                            MuscleId = 212000,
                            MuscleName = "Erector Spinae"
                        },
                        new
                        {
                            MuscleId = 221000,
                            MuscleName = "Rectus Abdominis"
                        },
                        new
                        {
                            MuscleId = 222000,
                            MuscleName = "Transverse Abdominis"
                        },
                        new
                        {
                            MuscleId = 223000,
                            MuscleName = "Obliques"
                        },
                        new
                        {
                            MuscleId = 311000,
                            MuscleName = "Gluteus Maximus"
                        },
                        new
                        {
                            MuscleId = 312000,
                            MuscleName = "Abductors"
                        },
                        new
                        {
                            MuscleId = 313000,
                            MuscleName = "Flexors"
                        },
                        new
                        {
                            MuscleId = 321000,
                            MuscleName = "Quadriceps"
                        },
                        new
                        {
                            MuscleId = 322000,
                            MuscleName = "Hamstrings"
                        },
                        new
                        {
                            MuscleId = 323000,
                            MuscleName = "Adductors"
                        },
                        new
                        {
                            MuscleId = 331000,
                            MuscleName = "Gastrocnemius"
                        },
                        new
                        {
                            MuscleId = 332000,
                            MuscleName = "Soleus"
                        },
                        new
                        {
                            MuscleId = 333000,
                            MuscleName = "Tibialis Anterior"
                        });
                });

            modelBuilder.Entity("ICS.Exercise.Classification", b =>
                {
                    b.HasOne("ICS.Exercise.Exercise", null)
                        .WithOne()
                        .HasForeignKey("ICS.Exercise.Classification", "ExerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
